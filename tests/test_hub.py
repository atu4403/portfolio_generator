import pytest
import adash as _
from portfolio_generator.hub import get_json, hub_with_key


@pytest.mark.heavy
def test_qiita():
    j = hub_with_key("qiita", "atu4403")
    k = _.allkeys(j[0])
    assert k == [
        "rendered_body",
        "body",
        "coediting",
        "comments_count",
        "created_at",
        "group",
        "id",
        "likes_count",
        "private",
        "reactions_count",
        "tags",
        "title",
        "updated_at",
        "url",
        "user.description",
        "user.facebook_id",
        "user.followees_count",
        "user.followers_count",
        "user.github_login_name",
        "user.id",
        "user.items_count",
        "user.linkedin_id",
        "user.location",
        "user.name",
        "user.organization",
        "user.permanent_id",
        "user.profile_image_url",
        "user.team_only",
        "user.twitter_screen_name",
        "user.website_url",
        "page_views_count",
        "team_membership",
    ]


@pytest.mark.heavy
def test_github():
    j = hub_with_key("github", "atu4403")
    k = _.allkeys(j[0])
    assert k == [
        "id",
        "node_id",
        "name",
        "full_name",
        "private",
        "owner.login",
        "owner.id",
        "owner.node_id",
        "owner.avatar_url",
        "owner.gravatar_id",
        "owner.url",
        "owner.html_url",
        "owner.followers_url",
        "owner.following_url",
        "owner.gists_url",
        "owner.starred_url",
        "owner.subscriptions_url",
        "owner.organizations_url",
        "owner.repos_url",
        "owner.events_url",
        "owner.received_events_url",
        "owner.type",
        "owner.site_admin",
        "html_url",
        "description",
        "fork",
        "url",
        "forks_url",
        "keys_url",
        "collaborators_url",
        "teams_url",
        "hooks_url",
        "issue_events_url",
        "events_url",
        "assignees_url",
        "branches_url",
        "tags_url",
        "blobs_url",
        "git_tags_url",
        "git_refs_url",
        "trees_url",
        "statuses_url",
        "languages_url",
        "stargazers_url",
        "contributors_url",
        "subscribers_url",
        "subscription_url",
        "commits_url",
        "git_commits_url",
        "comments_url",
        "issue_comment_url",
        "contents_url",
        "compare_url",
        "merges_url",
        "archive_url",
        "downloads_url",
        "issues_url",
        "pulls_url",
        "milestones_url",
        "notifications_url",
        "labels_url",
        "releases_url",
        "deployments_url",
        "created_at",
        "updated_at",
        "pushed_at",
        "git_url",
        "ssh_url",
        "clone_url",
        "svn_url",
        "homepage",
        "size",
        "stargazers_count",
        "watchers_count",
        "language",
        "has_issues",
        "has_projects",
        "has_downloads",
        "has_wiki",
        "has_pages",
        "forks_count",
        "mirror_url",
        "archived",
        "disabled",
        "open_issues_count",
        "license.key",
        "license.name",
        "license.spdx_id",
        "license.url",
        "license.node_id",
        "allow_forking",
        "is_template",
        "topics",
        "visibility",
        "forks",
        "open_issues",
        "watchers",
        "default_branch",
    ]


@pytest.mark.heavy
def test_zenn():
    j = hub_with_key("zenn", "atu4403")
    k = _.allkeys(j["entries"][0])
    assert k == [
        "title",
        "title_detail.type",
        "title_detail.language",
        "title_detail.base",
        "title_detail.value",
        "summary",
        "summary_detail.type",
        "summary_detail.language",
        "summary_detail.base",
        "summary_detail.value",
        "links",
        "link",
        "id",
        "guidislink",
        "published",
        "published_parsed",
        "authors",
        "author",
        "author_detail.name",
    ]
